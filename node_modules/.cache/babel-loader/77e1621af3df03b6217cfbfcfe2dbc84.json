{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/enock/Development/code/phase-2/project/proj/phase2-project/src/components/Product/Search/SearchItem.js\",\n    _s = $RefreshSig$();\n\n//Import React and the useState hook from the 'react' library\nimport React, { useState } from \"react\"; // Declare a functional component called 'Search' that takes in a 'products' prop\n\nfunction Search({\n  products\n}) {\n  _s();\n\n  // Use the useState hook to create a state variable called 'searchQuery' with an initial value of an empty string\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Use the useState hook to create a state variable called 'searchResults' with an initial value of an empty array\n\n  const [searchResults, setSearchResults] = useState([]); // Declare a function called 'handleSearch' that takes in an event as a parameter\n\n  const handleSearch = e => {\n    // Set the 'searchQuery' state variable to the current value of the input field\n    setSearchQuery(e.target.value); // Use the filter method to create a new array of products that match the search query\n\n    let results = products.filter(product => {\n      // Return true for products that have a name, category, or price that includes the search query (case-insensitive)\n      return product.name.toLowerCase().includes(searchQuery.toLowerCase()) || product.category.toLowerCase().includes(searchQuery.toLowerCase()) || product.price.toString().includes(searchQuery);\n    }); // Set the 'searchResults' state variable to the filtered array of products\n\n    setSearchResults(results);\n  }; // Return JSX for the component, which includes an input field and an unordered list of search results\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      class: \"mx-auto\",\n      style: {\n        width: 500\n      },\n      type: \"text\",\n      \"aria-label\": \"Search\",\n      placeholder: \"Search products here\",\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: () => setSearchQuery(\"\"),\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.name, \" - \", product.category, \" - $\", product.price]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 1\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 1\n  }, this);\n} // Export the 'Search' component\n\n\n_s(Search, \"6LwLJCqp9GeQ1AUUIpNBVCE9WXc=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/enock/Development/code/phase-2/project/proj/phase2-project/src/components/Product/Search/SearchItem.js"],"names":["React","useState","Search","products","searchQuery","setSearchQuery","searchResults","setSearchResults","handleSearch","e","target","value","results","filter","product","name","toLowerCase","includes","category","price","toString","display","alignItems","width","map","id"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA8B;AAAA;;AAC9B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C,CAF8B,CAG9B;;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD,CAJ8B,CAK9B;;AACA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC5B;AACAJ,IAAAA,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,CAF4B,CAG5B;;AACA,QAAIC,OAAO,GAAGT,QAAQ,CAACU,MAAT,CAAiBC,OAAD,IAAa;AAC3C;AACA,aACAA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCb,WAAW,CAACY,WAAZ,EAApC,KACAF,OAAO,CAACI,QAAR,CAAiBF,WAAjB,GAA+BC,QAA/B,CAAwCb,WAAW,CAACY,WAAZ,EAAxC,CADA,IAEAF,OAAO,CAACK,KAAR,CAAcC,QAAd,GAAyBH,QAAzB,CAAkCb,WAAlC,CAHA;AAKC,KAPa,CAAd,CAJ4B,CAY5B;;AACAG,IAAAA,gBAAgB,CAACK,OAAD,CAAhB;AACC,GAdD,CAN8B,CAqB9B;;;AACA,sBACA;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAAZ;AAAA,4BACA;AACI,MAAA,KAAK,EAAC,SADV;AAEI,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAFX;AAGK,MAAA,IAAI,EAAC,MAHV;AAIK,oBAAW,QAJhB;AAKK,MAAA,WAAW,EAAC,sBALjB;AAMK,MAAA,QAAQ,EAAEf;AANf;AAAA;AAAA;AAAA;AAAA,YADA,eASG;AAAQ,MAAA,KAAK,EAAC,iBAAd;AAAgC,MAAA,OAAO,EAAE,MAAMH,cAAc,CAAC,EAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATH,eAUA;AAAA,gBACCC,aAAa,CAACkB,GAAd,CAAmBV,OAAD,iBACnB;AAAA,mBACCA,OAAO,CAACC,IADT,SACkBD,OAAO,CAACI,QAD1B,UACwCJ,OAAO,CAACK,KADhD;AAAA,SAASL,OAAO,CAACW,EAAjB;AAAA;AAAA;AAAA;AAAA,cADC;AADD;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAoBC,C,CACD;;;GA3CSvB,M;;KAAAA,M;AA4CT,eAAeA,MAAf","sourcesContent":["//Import React and the useState hook from the 'react' library\nimport React, { useState } from \"react\";\n// Declare a functional component called 'Search' that takes in a 'products' prop\nfunction Search({ products }) {\n// Use the useState hook to create a state variable called 'searchQuery' with an initial value of an empty string\nconst [searchQuery, setSearchQuery] = useState(\"\");\n// Use the useState hook to create a state variable called 'searchResults' with an initial value of an empty array\nconst [searchResults, setSearchResults] = useState([]);\n// Declare a function called 'handleSearch' that takes in an event as a parameter\nconst handleSearch = (e) => {\n// Set the 'searchQuery' state variable to the current value of the input field\nsetSearchQuery(e.target.value);\n// Use the filter method to create a new array of products that match the search query\nlet results = products.filter((product) => {\n// Return true for products that have a name, category, or price that includes the search query (case-insensitive)\nreturn (\nproduct.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\nproduct.category.toLowerCase().includes(searchQuery.toLowerCase()) ||\nproduct.price.toString().includes(searchQuery)\n);\n});\n// Set the 'searchResults' state variable to the filtered array of products\nsetSearchResults(results);\n};\n// Return JSX for the component, which includes an input field and an unordered list of search results\nreturn (\n<div style={{ display: \"flex\", alignItems: \"center\" }}>\n<input\n    class=\"mx-auto\"\n    style={{ width: 500 }}\n     type=\"text\"\n     aria-label=\"Search\"\n     placeholder=\"Search products here\"\n     onChange={handleSearch}\n   />\n   <button class=\"btn btn-primary\" onClick={() => setSearchQuery(\"\")}>submit</button>\n<ul>\n{searchResults.map((product) => (\n<li key={product.id}>\n{product.name} - {product.category} - ${product.price}\n</li>\n))}\n</ul>\n</div>\n);\n}\n// Export the 'Search' component\nexport default Search;"]},"metadata":{},"sourceType":"module"}